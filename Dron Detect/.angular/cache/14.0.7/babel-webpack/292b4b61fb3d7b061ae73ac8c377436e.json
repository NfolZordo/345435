{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"myCanvas\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    // public context: CanvasRenderingContext2D;\n    ngAfterViewInit() {\n      let canvas = this.myCanvas.nativeElement;\n      let context = this.myCanvas.nativeElement.getContext('2d');\n      canvas.width = 1000;\n      canvas.height = 500;\n      var mouse = {\n        x: 0,\n        y: 0\n      };\n      var draw = false; // canvas.addEventListener(\"mousedown\", function(e){\n      //     mouse.x = e.pageX - this.offsetLeft;\n      //     mouse.y = e.pageY - this.offsetTop;\n      //     draw = true;\n      //     context.beginPath();\n      //     context.moveTo(mouse.x, mouse.y);\n      // });\n      // canvas.addEventListener(\"mousemove\", function(e){\n      //     if(draw==true){\n      //         mouse.x = e.pageX - this.offsetLeft;\n      //         mouse.y = e.pageY - this.offsetTop;\n      //         context.lineTo(mouse.x, mouse.y);\n      //         context.stroke();\n      //     }\n      // });\n\n      canvas.addEventListener(\"mouseup\", function (e) {\n        mouse.x = e.pageX - this.offsetLeft;\n        mouse.y = e.pageY - this.offsetTop;\n        context.beginPath();\n        var radgrad4 = context.createRadialGradient(0, 150, 50, 0, 140, 90);\n        radgrad4.addColorStop(0, '#F4F201');\n        context.fillRect(mouse.x, mouse.y, 10, 0); // context.lineTo(mouse.x, mouse.y);\n\n        context.stroke();\n        context.closePath();\n        draw = false;\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"my-appqq\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myCanvas = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"myCanvas\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", null, 0);\n      }\n    },\n    encapsulation: 2\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}